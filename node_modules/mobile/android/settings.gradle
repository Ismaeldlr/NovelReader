// Removed unused import for GradleException

pluginManagement {
  repositories {
    gradlePluginPortal()
    mavenCentral()
    google()
    // Repos para RN cuando compila dependencias desde node_modules
    maven { url("$rootDir/../../node_modules/react-native/android") }
    maven { url("$rootDir/../node_modules/react-native/android") }
  }

  // Detecta node_modules en monorepo y registra el plugin de RN
  def candidates = [
    file("$rootDir/../../node_modules"),
    file("$rootDir/../node_modules"),
    file("$rootDir/../../../node_modules")
  ]
  def NODE_MODULES = candidates.find { it.exists() }
  if (NODE_MODULES == null) {
    throw new Exception("No se encontró 'node_modules'. Intenté: " + candidates)
  }

  // Hace disponible el plugin com.facebook.react sin usar classpath
  includeBuild(new File(NODE_MODULES, "react-native-gradle-plugin"))
}

rootProject.name = "mobile"

// Autolinking del RN CLI (busca el archivo en node_modules hoisted)
def candidates = [
  file("$rootDir/../../node_modules"),
  file("$rootDir/../node_modules"),
  file("$rootDir/../../../node_modules")
]
def NODE_MODULES = candidates.find { it.exists() }
if (NODE_MODULES == null) {
  throw new Exception("No se encontró 'node_modules'. Intenté: " + candidates)
}

def cliGradle = new File(NODE_MODULES, "@react-native-community/cli-platform-android/native_modules.gradle")
if (!cliGradle.exists()) {
    throw new Exception("No existe " + cliGradle + ". Instala @react-native-community/cli-platform-android o revisa la ruta.")
}
apply from: cliGradle
applyNativeModulesSettingsGradle(settings)

include(":app")
